
<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <title>Editar Superhéroe</title>
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">

  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>
<body class="flex flex-col p-3 m-0 items-center justify-center min-h-screen bg-cover bg-center bg-no-repeat bg-fixed" style="background-image: url('/img/superheroes.png')">
  <h1 class="text-4xl text-white font-bold mb-4">Editar Superhéroe</h1>

  <form id="formEditar" action="/api/heroes/<%= hero._id %>/editar?_method=PUT" method="POST" class="bg-gray-50 bg-opacity-80 text-gray-700 p-6 rounded shadow-md max-w-xl w-full">
    <input type="hidden" name="_method" value="PUT">

    <!-- Nombre de superhéroe -->
    <div class="mb-4">
      <label class="block mb-2 font-bold">Nombre de superhéroe</label>
      <input name="nombreSuperheroe" value="<%= hero.nombreSuperheroe %>" class="text-black w-full mb-1 p-2 border rounded">
      <p class="text-red-500 text-sm mt-1 hidden" id="error-nombreSuperheroe"></p>
    </div>

    <!-- Nombre real -->
    <div class="mb-4">
      <label class="block mb-2 font-bold">Nombre real</label>
      <input name="nombreReal" value="<%= hero.nombreReal %>" class="text-black w-full mb-1 p-2 border rounded">
      <p class="text-red-500 text-sm mt-1 hidden" id="error-nombreReal"></p>
    </div>

    <!-- Nombre Sociedad -->
    <div class="mb-4">
      <label class="block mb-2 font-bold">Nombre Sociedad</label>
      <input name="nombreSociedad" value="<%= hero.nombreSociedad %>" class="text-black w-full mb-1 p-2 border rounded">
    </div>

    <!-- Edad -->
    <div class="mb-4">
      <label class="block mb-2 font-bold">Edad</label>
      <input type="number" name="edad" value="<%= hero.edad %>" class="text-black w-full mb-1 p-2 border rounded">
      <p class="text-red-500 text-sm mt-1 hidden" id="error-edad"></p>
    </div>

    <!-- Planeta de origen -->
    <div class="mb-4">
      <label class="block mb-2 font-bold">Planeta de origen</label>
      <input name="planetaOrigen" value="<%= hero.planetaOrigen %>" class="text-black w-full mb-1 p-2 border rounded">
      <p class="text-red-500 text-sm mt-1 hidden" id="error-planetaOrigen"></p>
    </div>

    <!-- Poderes -->
    <div class="mb-4">
      <label class="block mb-2 font-bold">Poderes (separados por coma)</label>
      <input name="poderes" value="<%= hero.poderes.join(', ') %>" class="text-black w-full mb-1 p-2 border rounded">
      <p class="text-red-500 text-sm mt-1 hidden" id="error-poderes"></p>
    </div>

    <!-- Debilidad -->
    <div class="mb-4">
      <label class="block mb-2 font-bold">Debilidad (separadas por coma)</label>
      <input name="debilidad" value="<%= hero.debilidad.join(', ') %>" class="text-black w-full mb-1 p-2 border rounded">
      <p class="text-red-500 text-sm mt-1 hidden" id="error-debilidad"></p>
    </div>

    <!-- Botones -->
    <div class="flex space-x-4">
      <button type="submit" class="flex-1 bg-gray-700 text-white px-6 py-2 rounded-xl font-semibold hover:bg-gray-800 text-center">
        Editar Superhéroe
      </button>
      <a href="/api/heroes" class="flex-1 bg-white text-black border border-black px-6 py-2 rounded-xl font-semibold hover:bg-gray-100 text-center">
        Cancelar
      </a>
    </div>
  </form>

  <!-- Validación + Confirmación -->
  <script>
    document.getElementById('formEditar').addEventListener('submit', function (e) {
      e.preventDefault(); // Previene envío inmediato
      const campos = ['nombreSuperheroe', 'nombreReal', 'edad', 'planetaOrigen', 'poderes', 'debilidad'];
      let hayErrores = false;

      campos.forEach(campo => {
        const input = this.elements[campo];
        const valor = input.value.trim();
        const errorMsg = document.getElementById('error-' + campo);

        input.classList.remove('border-red-500');
        errorMsg.classList.add('hidden');
        errorMsg.textContent = '';

        if (!valor) {
          input.classList.add('border-red-500');
          errorMsg.textContent = "Este campo es obligatorio.";
          errorMsg.classList.remove('hidden');
          hayErrores = true;
        } else {
          switch (campo) {
            case 'nombreSuperheroe':
            case 'nombreReal':
            case 'debilidad':
              if (valor.length < 3 || valor.length > 60) {
                input.classList.add('border-red-500');
                errorMsg.textContent = "Debe tener entre 3 y 60 caracteres.";
                errorMsg.classList.remove('hidden');
                hayErrores = true;
              }
              break;
            case 'edad':
              if (!/^\d+$/.test(valor) || parseInt(valor) < 0) {
                input.classList.add('border-red-500');
                errorMsg.textContent = "La edad debe ser un número entero positivo.";
                errorMsg.classList.remove('hidden');
                hayErrores = true;
              }
              break;
            case 'poderes':
              const poderes = valor.split(',').map(p => p.trim()).filter(p => p.length > 0);
              if (poderes.length === 0) {
                input.classList.add('border-red-500');
                errorMsg.textContent = "Debe ingresar al menos un poder, separados por coma.";
                errorMsg.classList.remove('hidden');
                hayErrores = true;
              } else if (!poderes.every(p => p.length >= 3 && p.length <= 60)) {
                input.classList.add('border-red-500');
                errorMsg.textContent = "Cada poder debe tener entre 3 y 60 caracteres.";
                errorMsg.classList.remove('hidden');
                hayErrores = true;
              }
              break;
          }
        }
      });

   if (hayErrores) return;

      Swal.fire({
        title: '¿Editar superhéroe?',
        text: '¿Desea editar este superhéroe en la base de datos?',
        icon: 'question',
        background: '#f9fafb',
        color: '#1f2937',
        iconColor: '#374151',
        showCancelButton: true,
        confirmButtonText: 'Sí, editar',
        cancelButtonText: 'Cancelar',
        confirmButtonColor: '#374151',
        cancelButtonColor: '#ffffff',
        customClass: {
          popup: 'max-w-md w-full rounded-xl shadow-xl px-4',
          title: 'text-base md:text-xl font-bold',
          htmlContainer: 'text-sm md:text-base',
          confirmButton: 'w-full md:w-auto text-white bg-gray-500 hover:bg-gray-800 px-6 py-2 rounded-xl mb-2 md:mb-0 md:mr-2',
          cancelButton: 'w-full md:w-auto text-black border border-black hover:bg-gray-200 px-6 py-2 rounded-xl mt-2 md:mt-0'
        },
        buttonsStyling: false
      }).then((result) => {
        if (result.isConfirmed) {
          Swal.fire({
            title: 'Superhéroe Editado',
            text: 'El superhéroe ha sido editado exitosamente.',
            icon: 'success',
            background: '#f9fafb',
            color: '#1f2937',
            iconColor: '#10b981',
            showConfirmButton: false,
            timer: 2000,
            timerProgressBar: true,
            customClass: {
              popup: 'max-w-md w-full rounded-xl shadow-xl px-4',
              title: 'text-base md:text-xl font-bold',
              htmlContainer: 'text-sm md:text-base',
            }
          }).then(() => {
            e.target.submit(); // Enviar el formulario real
          });
        }
      });
    });
  </script>
</body>
</html>
